#ifndef _INCLUDE_YCLYCDEFINE_H_
#define _INCLUDE_YCLYCDEFINE_H_

#include "YCBasic\YCStaticAssert.h"

/*
 * YCLYCDefine : LYC打包文件结构
 *
 *  说明：文件扩展名为.lyc
 *        通过文件头部信息的版本号确定后面的解压算法
 *        在最初的版本中Pack文件不能递归包含，通过文件名挂接到文件系统中
 *        所以即使在不同的路径下面，Pack文件也不能包含相同的文件名
 *        在Pack文件中包含两种文件, 通过文件夹实现递归包含
 *            常规文件 ：YCLYCFile
 *            文件夹   : YCLYCFileDirectory
 *        
 *        其中的文件支持，压缩和非压缩两种，通过头部信息判断是否压缩
 *        在每一层中目前支持FILES_IN_DIR=500个文件，在Pack头部有描述信息
 *
 *   Pack文件头信息：
 *
 *  |<----------------------------------------------------- 64 Bytes -------------------------------------------------------->|
 *   -------------------------------------------------------------------------------------------------------------------------
 *  |LYC.|Version|Size|MD5.|FILES_IN_DIR|TYPE|Primary|FirstIdlePosition|Reserved..............................................|
 *  |              |                                                                                                          |
 *  |              |                           FileList/Dirs                                                                  |
 *  |              |                                                                                                          |
 *  |--------------|----------------------------------------------------------------------------------------------------------|
 *  |              |                                                                                                          |
 *  |              |                                                                                                          | 
 *  |              |                                                                                                          |
 *  |              |                                                                                                          |
 *  |              |----------------------------> Contents(MaxSize = 2GB)                                                     |
 *  |                        If One File need large than 2GB, use partial file to append extra contents.                      |
 *  |             eg. object.lyc is 2GB full, if new content is reached, use object.part1.lyc, object.part2.lyc...            |
 *  |                                                                                                                         |
 *  |                                                                                                                         |
 *  |                                                                                                                         |
 *  |                                                                                                                         | 
 *   -------------------------------------------------------------------------------------------------------------------------
 *
 *  FileDirectory文件头信息：在Pack文件中，文件夹也是当真普通文件处理，当Pack文件的空闲小于1%, 20MB时不允许创建文件夹
 *         文件夹中创建文件，从Pack文件头申请FirstIdlePosition，当文件夹被删除时，FileDirectory本身被值为FREE，下面的所有   
 *         文件释放的空间都挂接到FirstIdlePosition的链表中，排序并可以实现相邻空块的合并。
 *
 *   -------------------------------------------------------------------------------------------------------------------------
 *  |............................................................Reserved.....................................................|
 *  |-------------------------------------------------------------------------------------------------------------------------|
 *  |          File        |          File        |                                                                           |
 *  |           |                              FileList/Dirs                                                                  |
 *  |           |                                                                                                             |
 *  |-----------|-------------------------------------------------------------------------------------------------------------|
 *              |
 *              |                --------
 *              |               |filename|
 *              |                --------
 *              |               | offset |
 *              |               |--------
 *              |               | length |
 *               --------------> --------
 *                              |Reserved|
 *                              |--------
 *                              |Reserved|
 *                               --------
 *
 */

#define LYC_FILE_EXTENSION	"\\*.lyc"	   //扩展名

#define FILE_MAGICCODE		"LYC."         //must 4 bytes
#define FILE_MAGIC_LENGTH	4        

#define FILES_IN_DIR		144            //每一层,每个目录可以放144个文件，决定了Pack文件和Directory头部的长途

#define FILENAME_LENGTH		16             //文件名的长度，包含扩展名
#define MD5_LENGTH			16             //MD5码长度

#define FILE_ROUNDSIZE		1024		   //文件长度取整

#define ROUNDSIZE(length)   (((length+FILE_ROUNDSIZE-1)>>10)<<10)

#define FILL_STUFF "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\
                    00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\
	                00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\
	                00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\
	                00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\
	                00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\
	                00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\
	                00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"

//
// 说明：压缩算法 0~15
//
enum {
	LYC_ZIP_NO		= 0,  //无压缩
	LYC_ZIP_ZLIB	= 1,  //ZLIB压缩
};

//
// 说明：每一个文件在头部的描述
//
struct LYC_FILE_T_1 {
	char name[FILENAME_LENGTH];
	unsigned int offset;
	unsigned int length;
	unsigned int type:2;  //文件类型：0 未分配/已释放，1 文件，2 目录
	unsigned int reserved:30;
};

COMPILE_ASSERT(sizeof(LYC_FILE_T_1) == 28);

struct LYC_PACK_HEAD
{
	char magic[FILE_MAGIC_LENGTH];    //魔数
	unsigned int version;             //版本
};

COMPILE_ASSERT(sizeof(LYC_PACK_HEAD) == 8);

//
// 说明：LYC Pack文件头
//
//      Length = 4 + 4 + 4 + 4 + 16 + 16 + 4 + 4 + 4 + 4 + 4 + FILES_IN_DIR * sizeof(LYC_FILE_T_1)
//             = 68 + 144 * 28 = 4088
//
struct LYC_PACK_T_1 {
	LYC_PACK_HEAD head;               //全局头
	unsigned int size;                //除头区数据长度
	unsigned int number;              //FILES_IN_DIR
	char md5[MD5_LENGTH];             //数据区MD5
	char brother[FILENAME_LENGTH];    //前置文件,以支持object.part1.lyc指向前一个
	unsigned int idle;                //指向第一个空闲的位置
	unsigned int zip:4;               //压缩 ：0 未压缩，1 .. 15  具体压缩算法
	unsigned int encrypt:4;           //加密 : 0 未加密，1 .. 15  具体加密算法
	unsigned int reserved:24;         //保留位
	unsigned int reserved1;           //保留字段2
	unsigned int reserved2;           //保留字段2
	LYC_FILE_T_1 files[FILES_IN_DIR];
};

COMPILE_ASSERT(sizeof(LYC_PACK_T_1) == 4096);

//
// 说明：LYC 文件夹结构
//
struct LYC_DIR_T_1 {
	LYC_FILE_T_1 files[FILES_IN_DIR];  //每个文件夹下放144个文件
};

COMPILE_ASSERT(sizeof(LYC_DIR_T_1) == 4032);

#endif